{"version":3,"sources":["components/logo.png","components/Header.js","App.js","serviceWorker.js","index.js","androidRobot.svg"],"names":["module","exports","__webpack_require__","p","MainHeader","styled","header","_templateObject","Bounds","div","_templateObject2","FlexBox","_templateObject3","Logo","h2","_templateObject4","SiteNavigationWrapper","nav","_templateObject5","Header","react_default","a","createElement","href","rel","src","logo","alt","React","Component","App_templateObject","SiteBanner","App_templateObject2","Main","App_templateObject3","App_templateObject4","HeroWrapper","App_templateObject5","Headline","h1","_templateObject6","SubHeadline","_templateObject7","Copyright","h4","_templateObject8","SocialIcons","ul","_templateObject9","Android","_templateObject10","App","className","App_FlexBox","components_Header","App_Bounds","class","AndroidRobot","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f02ead34.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.2ff00cfc.png\";","import React from 'react';\nimport styled from 'styled-components';\nimport logo from './logo.png';\n\n// main site header\nconst MainHeader = styled.header`\n    background: #fff;\n    position: relative;\n    width: 100%;\n    height: 65px;\n    button {\n        line-height: 1;\n        border: none;\n        background: none;\n    }\n`\n// Wrapping bounds container for header\nconst Bounds = styled.div` \n    height: 100%;\n    margin: 0 60px;\n    @media (max-width: 48em) { \n        margin: 0 12px;\n    }\n`\n// implement flex box for center align of elements vertically\nconst FlexBox = styled.div`\n    display: flex;\n    align-items: center;\n    height: 100%;\n` \n// logo placeholder - WILL REMOVE\nconst Logo = styled.h2`\n    margin: 0;\n    flex: 0 0 auto;\n    margin-right: 12px;\n    @media screen and (max-width: 48em) {\n        margin-right: 6px;\n    }\n    a {\n        text-decoration: none;\n    }\n    img {\n        width: 211px;\n        max-width: 211px;\n        display: block;\n        height: auto;\n    }\n`\nconst SiteNavigationWrapper = styled.nav`\n    flex: 1 1 0;\n    text-align: left;\n    display: flex;\n    justify-content: flex-end;\n    ul {\n        list-style-type: none;\n    }\n    @media screen and (max-width: 40em) {\n        ul {\n            display: none;\n        }\n    }\n    ul li {\n        display: inline-block;\n        margin-right: 12px;\n    }\n    a {\n        text-decoration: none;\n    }\n`\n\nclass Header extends React.Component {\n    render() {\n        return (\n            <MainHeader>\n                <Bounds>\n                    <FlexBox>\n                        <Logo>\n                            <a href=\"https://gdgelpaso.org\" rel=\"GDG El Paso Home\">\n                                <img src={logo} alt=\"GDG El Paso\" />\n                            </a>\n                        </Logo>\n                        <SiteNavigationWrapper>\n                            <ul>\n                                <li><a href=\"https://gdgelpaso.org\">Home</a></li>\n                                <li><a href=\"#coming-soon\">Our Story</a></li>\n                                <li><a href=\"#coming-soon\">Join GDG</a></li>\n                            </ul>\n                        </SiteNavigationWrapper>\n                    </FlexBox>\n                </Bounds>\n            </MainHeader>\n        );\n    }\n}\n\nexport default Header;","// Copyright GDG El Paso\n// Contributors: Bryan Ramos\n\nimport React from 'react';\nimport AndroidRobot from './androidRobot.svg';\nimport './App.css';\nimport styled from 'styled-components';\nimport Header from './components/Header';\n\n// implement css flexbox for center align of elements vertically and full height DOM\nconst FlexBox = styled.div`\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n    height: 100%;\n` \n// Site under construction banner (:\nconst SiteBanner = styled.div`\n    background: #075b9a;\n    padding: 1.25rem;\n    color: #fff;\n    text-align: center;\n    font-size: 17px;\n`\n// Main Content Div\nconst Main = styled.div`\n    flex-grow: 1;\n    display: flex;\n    align-items: center;\n`\n// Bounded Container\nconst Bounds = styled.div`\n    display: flex;\n    margin: 0 60px;\n    @media (max-width: 48em) { \n        margin: 0 12px;\n    }\n`\n// Container for Headline and Description\nconst HeroWrapper = styled.div`\n  width: 50%;\n  text-align: left;\n`\nconst Headline = styled.h1`\n  font-size: 50px;\n  margin: 0px 0 0px 0;\n  padding: 0;\n  line-height: 1.1;\n  font-weight: 500;\n  @media screen and (min-width: 48em) {\n    font-size: 68px;\n    font-weight: 500;\n    letter-spacing: -0.6px;\n    line-height: 1.2;\n  }\n`\nconst SubHeadline = styled.h1`\n  font-size: 30px;\n  line-height: 1.1;\n  font-weight: 400;\n  @media screen and (max-width: 48em) {\n    font-size: 20px;\n    line-height: 1.3;\n  }\n`\nconst Copyright = styled.h4`\n  margin-top: 24px;\n  color: rgba(61, 65, 68, 0.3);\n  font-size: 20px;\n  font-weight: 400;\n`\nconst SocialIcons = styled.ul`\n  margin: 0 0 0 5px;\n  padding: 0;\n  li {\n    display: inline-block;\n    margin-right: 12px;\n    font-size: 40px;\n  }\n`\n\nconst Android = styled.div`\n    display: flex;\n    justify-content: center;\n    width: 50%;\n    img {\n        height: 400px;\n    }\n`;\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <FlexBox>\n            <Header /> \n            <SiteBanner>\n                Our site is under active construction!\n            </SiteBanner>\n            <Main>\n                <Bounds>\n                    <HeroWrapper>\n                        <Headline>Google Developer Group El Paso</Headline>\n                        <SubHeadline>We are a group of students and industry professionals who love writing code and developing and we strive to share our passion with others!</SubHeadline>\n                        <SocialIcons>\n                            <li><a href=\"https://www.facebook.com/gdgelpaso/\"><i class=\"fab fa-facebook\"></i></a></li>\n                            <li><a href=\"https://github.com/gdg-el-paso/\"><i class=\"fab fa-github\"></i></a></li>\n                            <li><a href=\"https://www.instagram.com/gdgelpaso\"><i class=\"fab fa-instagram\"></i></a></li>\n                            <li><a href=\"https://www.meetup.com/GDG-El-Paso/\"><i class=\"fab fa-meetup\"></i></a></li>\n                        </SocialIcons>  \n                    </HeroWrapper>\n                    <Android><img src={AndroidRobot}></img></Android>\n                </Bounds>\n            </Main>\n            <Bounds>\n                <Copyright>Copyright 2019 GDG El Paso</Copyright>\n            </Bounds>\n        </FlexBox>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/androidRobot.07991880.svg\";"],"sourceRoot":""}